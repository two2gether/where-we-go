### ================================
### Place Review API 테스트
### ================================

### 회원가입 (필요시)
POST http://localhost:8080/api/auth/signup
Content-Type: application/json

{
  "email": "reviewer@test.com",
  "nickname": "리뷰어",
  "password": "Password123!",  
  "confirmPassword": "Password123!"
}

### 로그인
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "reviewer@test.com",
  "password": "Password123!"
}

> {%
    if (response.body && response.body.data && response.body.data.token) {
        client.global.set("token", "Bearer " + response.body.data.token);
        console.log("토큰 저장 완료: " + response.body.data.token);
    }
%}

### 장소 검색 (리뷰 테스트용 장소 찾기)
POST http://localhost:8080/api/places/search
Content-Type: application/json
Authorization: {{token}}

{
  "query": "스타벅스 강남구청정문점",
  "userLocation": {
    "latitude": 37.498011,
    "longitude": 127.020102,
    "radius": 2000
  }
}

> {%
    if (response.body && response.body.data && response.body.data.length > 0) {
        client.global.set("placeId", response.body.data[0].placeId);
        console.log("placeId 저장 완료: " + response.body.data[0].placeId);
    }
%}

### ================================
### 1. 리뷰 작성 테스트
### ================================

### 리뷰 작성 (5점 만점)
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 5,
  "content": "정말 좋은 카페입니다! 커피도 맛있고 분위기도 좋아요. 직원분들도 친절하시고 와이파이도 빨라서 작업하기 좋습니다."
}

### 리뷰 작성 (4점)
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 4,
  "content": "괜찮은 곳이네요. 다음에 또 올 것 같습니다."
}

### 리뷰 작성 (잘못된 평점 - 유효성 검사 테스트)
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 6,
  "content": "잘못된 평점 테스트"
}

### 리뷰 작성 (내용 없음 - 유효성 검사 테스트)
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 3,
  "content": ""
}

### ================================
### 2. 리뷰 목록 조회 테스트
### ================================

### 특정 장소의 리뷰 목록 조회 (기본 페이징)
GET http://localhost:8080/api/places/{{placeId}}/reviews
Authorization: {{token}}

### 특정 장소의 리뷰 목록 조회 (페이징 파라미터 지정)
GET http://localhost:8080/api/places/{{placeId}}/reviews?page=0&size=5
Authorization: {{token}}

### 특정 장소의 리뷰 목록 조회 (두 번째 페이지)
GET http://localhost:8080/api/places/{{placeId}}/reviews?page=1&size=5
Authorization: {{token}}

### 비로그인 사용자의 리뷰 목록 조회
GET http://localhost:8080/api/places/{{placeId}}/reviews

### ================================
### 3. 내 리뷰 조회 테스트
### ================================

### 특정 장소에 대한 내 리뷰 조회
GET http://localhost:8080/api/places/{{placeId}}/reviews/me
Authorization: {{token}}

### 내가 작성한 모든 리뷰 목록 조회
GET http://localhost:8080/api/users/me/reviews
Authorization: {{token}}

### 내 리뷰 목록 (페이징)
GET http://localhost:8080/api/users/me/reviews?page=0&size=10
Authorization: {{token}}

### ================================
### 4. 리뷰 수정 테스트
### ================================

### 내 리뷰 수정
PUT http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 4,
  "content": "리뷰를 수정합니다. 처음보다는 조금 아쉬운 부분이 있네요. 그래도 괜찮은 곳입니다."
}

### 내 리뷰 수정 (잘못된 평점)
PUT http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 0,
  "content": "잘못된 평점으로 수정 시도"
}

### ================================
### 5. 리뷰 삭제 테스트
### ================================

### 내 리뷰 삭제
DELETE http://localhost:8080/api/places/{{placeId}}/reviews
Authorization: {{token}}

### 이미 삭제된 리뷰 삭제 시도 (에러 테스트)
DELETE http://localhost:8080/api/places/{{placeId}}/reviews
Authorization: {{token}}

### ================================
### 6. 다양한 장소 리뷰 테스트
### ================================

### 다른 장소 검색 (교보문고 강남점)
POST http://localhost:8080/api/places/search
Content-Type: application/json
Authorization: {{token}}

{
  "query": "교보문고 강남점",
  "userLocation": {
    "latitude": 37.498011,
    "longitude": 127.020102,
    "radius": 3000
  }
}

> {%
    if (response.body && response.body.data && response.body.data.length > 0) {
        client.global.set("placeId2", response.body.data[0].placeId);
        console.log("placeId2 저장 완료: " + response.body.data[0].placeId);
    }
%}

### 두 번째 장소에 리뷰 작성
POST http://localhost:8080/api/places/{{placeId2}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 4,
  "content": "책이 정말 많고 카페도 있어서 좋네요. 주차공간이 조금 부족한 것 같습니다."
}

### 두 번째 장소 리뷰 목록 조회
GET http://localhost:8080/api/places/{{placeId2}}/reviews
Authorization: {{token}}

### ================================
### 7. 에러 케이스 테스트
### ================================

### 존재하지 않는 장소에 리뷰 작성
POST http://localhost:8080/api/places/invalid-place-id/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 5,
  "content": "존재하지 않는 장소 테스트"
}

### 인증 없이 리뷰 작성 시도
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json

{
  "rating": 5,
  "content": "인증 없이 리뷰 작성 시도"
}

### 존재하지 않는 장소의 리뷰 목록 조회
GET http://localhost:8080/api/places/invalid-place-id/reviews
Authorization: {{token}}

### ================================
### 8. 성능 테스트용 (여러 리뷰 생성)
### ================================

### 여러 개의 리뷰 작성 (성능 테스트용)
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 5,
  "content": "첫 번째 테스트 리뷰입니다."
}

###
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 4,
  "content": "두 번째 테스트 리뷰입니다."
}

###
POST http://localhost:8080/api/places/{{placeId}}/reviews
Content-Type: application/json
Authorization: {{token}}

{
  "rating": 3,
  "content": "세 번째 테스트 리뷰입니다."
}

### 대량 리뷰 목록 조회 (페이징 성능 테스트)
GET http://localhost:8080/api/places/{{placeId}}/reviews?page=0&size=20
Authorization: {{token}}