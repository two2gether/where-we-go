name: EC2 Deploy (feat/place-system)

on:
  push:
    branches: [ feat/place-system ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: wherewego-app
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feat/place-system'
    
    env:
      DB_HOST: ${{ secrets.DB_HOST2 }}
      DB_PORT: ${{ secrets.DB_PORT2 || '3306' }}
      DB_NAME: ${{ secrets.DB_NAME2 }}
      DB_USERNAME: ${{ secrets.DB_USERNAME2 }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD2 }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
    
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: wherewego-app

      - name: Setup EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST2 }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY2 }}
          script: |
            mkdir -p /home/ubuntu/app
            if ! java -version 2>&1 | grep -q "17"; then
              sudo apt update && sudo apt install -y openjdk-17-jdk
            fi

      - name: Copy JAR
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST2 }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY2 }}
          source: "*.jar"
          target: "/home/ubuntu/app/"
          overwrite: true

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST2 }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY2 }}
          envs: DB_HOST,DB_PORT,DB_NAME,DB_USERNAME,DB_PASSWORD,JWT_SECRET_KEY,GOOGLE_MAPS_API_KEY
          script: |
            cd /home/ubuntu/app
            
            # Stop existing app gracefully
            if pgrep -f 'java.*Where-we-go' > /dev/null; then
              echo "Stopping existing application..."
              sudo pkill -f 'java.*Where-we-go' || true
              sleep 10
              # If still running, force kill
              if pgrep -f 'java.*Where-we-go' > /dev/null; then
                sudo pkill -9 -f 'java.*Where-we-go' || true
              fi
            fi
            
            # Clean up port 8080
            sudo fuser -k 8080/tcp || true
            sleep 5
            
            # Start application (use properties file instead of long command line args)
            nohup java -jar Where-we-go-0.0.1-SNAPSHOT.jar \
              --spring.profiles.active=dev \
              > app.log 2>&1 &
            
            # Immediate health check loop - start early and frequent
            echo "Starting health checks immediately..."
            
            for i in {1..20}; do
              echo "Health check attempt $i/20 ($(date))..."
            
              # Check if process is still running
              if ! pgrep -f 'java.*Where-we-go' > /dev/null; then
                echo "❌ Application process died!"
                tail -30 app.log
                exit 1
              fi
            
              # Try health check
              if curl -f "http://localhost:8080/health" -s > /dev/null 2>&1; then
                echo "✅ Deployment successful!"
                echo "Health response:"
                curl -s "http://localhost:8080/health"
                exit 0
              fi
            
              # Show recent logs for debugging
              if [ $i -eq 5 ] || [ $i -eq 10 ] || [ $i -eq 15 ]; then
                echo "=== Recent logs at attempt $i ==="
                tail -10 app.log
              fi
            
              sleep 15
            done
            
            echo "❌ Health check failed"
            echo "=== Full Application Log ==="
            cat app.log
            echo "=== Process Status ==="
            ps aux | grep java
            exit 1