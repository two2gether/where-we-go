name: CI/CD Deploy

on:
  push:
    branches: [ feat-user ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant permission to gradlew
        run: chmod +x ./gradlew

      # ✅ 빌드 시 테스트 제외 (원하면 --no-daemon만 사용)
      - name: Build Spring Boot App
        run: ./gradlew clean build -x test

      # ✅ 빌드된 JAR 업로드 (워크플로우 아티팩트로 저장)
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: build/libs/where-we-go-[0-9.]*-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # ✅ 빌드된 JAR 다운로드
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app

      # ✅ EC2로 JAR 복사
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "*.jar"
          target: "/home/ubuntu/app/"
          overwrite: true

      # ✅ EC2에서 애플리케이션 실행
      - name: Restart Spring Boot on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            bash /home/ubuntu/app/run-deploy.sh