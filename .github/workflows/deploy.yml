name: CI/CD Deploy
on:
  push:
    branches: [ test/mvp ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant permission to gradlew
        run: chmod +x ./gradlew
      - name: Run Tests
        run: ./gradlew test
      - name: Build Spring Boot App
        run: ./gradlew clean build -x test
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: build/libs/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app
      - name: Create app directory on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/app
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "*.jar"
          target: "/home/ubuntu/app/"
          overwrite: true
      - name: Create deployment script
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: DB_HOST,DB_PORT,DB_NAME,DB_USERNAME,DB_PASSWORD,GOOGLE_MAPS_API_KEY,JWT_SECRET_KEY
          script: |
            cat > /home/ubuntu/deploy.sh << 'EOF'
            #!/bin/bash
            echo "Starting deployment process..."
            
            # Stop existing application
            pkill -f 'Where-we-go-0.0.1-SNAPSHOT.jar' || true
            sleep 3
            
            # Set environment variables
            export DB_HOST=$1
            export DB_PORT=$2
            export DB_NAME=$3
            export DB_USERNAME=$4
            export DB_PASSWORD=$5
            export GOOGLE_MAPS_API_KEY=$6
            export JWT_SECRET_KEY=$7
            export SPRING_PROFILES_ACTIVE=dev
            
            # Start application
            cd /home/ubuntu/app
            nohup java -jar Where-we-go-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
            
            # Wait and check status
            sleep 10
            if ps aux | grep -q "Where-we-go-0.0.1-SNAPSHOT.jar[^[]"; then
              echo "✅ Application started successfully!"
              echo "PID: $(pgrep -f 'Where-we-go-0.0.1-SNAPSHOT.jar')"
            else
              echo "❌ Application failed to start"
              echo "Recent logs:"
              tail -20 app.log 2>/dev/null || echo "No log file found"
              exit 1
            fi
            EOF
            
            chmod +x /home/ubuntu/deploy.sh
            
      - name: Execute deployment script
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: 15m
          envs: DB_HOST,DB_PORT,DB_NAME,DB_USERNAME,DB_PASSWORD,GOOGLE_MAPS_API_KEY,JWT_SECRET_KEY
          script: |
            /home/ubuntu/deploy.sh "$DB_HOST" "$DB_PORT" "$DB_NAME" "$DB_USERNAME" "$DB_PASSWORD" "$GOOGLE_MAPS_API_KEY" "$JWT_SECRET_KEY"