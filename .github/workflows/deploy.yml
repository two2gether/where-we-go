name: CI/CD Deploy
on:
  push:
    branches: [ dev ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant permission to gradlew
        run: chmod +x ./gradlew
      - name: Build Spring Boot App
        run: ./gradlew clean build -x test
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: build/libs/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app
      - name: Create app directory on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: DB_HOST,DB_PORT,DB_NAME,DB_USERNAME,DB_PASSWORD
          script: |
            mkdir -p /home/ubuntu/app
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "*.jar"
          target: "/home/ubuntu/app/"
          overwrite: true
      - name: Restart Spring Boot on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: DB_HOST,DB_PORT,DB_NAME,DB_USERNAME,DB_PASSWORD
          script: |
            pkill -f 'java.*app.jar' || true
            nohup java -jar /home/ubuntu/app/Where-we-go-0.0.1-SNAPSHOT.jar \
            --spring.datasource.url=jdbc:mysql://$DB_HOST:$DB_PORT/$DB_NAME \
            --spring.datasource.username=$DB_USERNAME \
            --spring.datasource.password=$DB_PASSWORD > /home/ubuntu/app/app.log 2>&1 &